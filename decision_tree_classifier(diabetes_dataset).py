# -*- coding: utf-8 -*-
"""decision tree classifier(diabetes dataset).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ftfa2YGSdlD505LB3wDn8OOzbDbWuOmB
"""

import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix
from sklearn.tree import export_graphviz
import graphviz
from sklearn.metrics import accuracy_score

dia=pd.read_csv("/content/diabetes.csv")

dia.head(10)

dia.tail(10)

dia.isnull()

dia.describe()

pd.unique(dia.Age)

dia.info()

dia.shape

import matplotlib.pyplot as plt

plt.scatter(dia.Age,dia.Glucose)

plt.plot(dia.Age,dia.BloodPressure)

plt.hist(dia.Glucose)

plt.bar(dia.Age,dia.Pregnancies)
plt.xlabel("AGE")
plt.ylabel("PREGNANCIES")

plt.boxplot(dia.Glucose)

plt.pie(dia.Age.head(20))
plt.show()

dia.plot.area()

dia.plot.bar(stacked=True)

dia.boxplot(figsize=(30,15))

x=dia.drop('Outcome', axis=1)
y=dia.Outcome
x

plt.figure(figsize=(10,10))
plotnumber=1
for col in dia.columns:
  if plotnumber<=8:
    ax=plt.subplot(3,3,plotnumber)
    sns.boxplot(dia[col])
    plt.xlabel(col,fontsize=15)
  plotnumber+=1
plt.tight_layout()
plt.show()

dia.isna().sum() #missing values

#missing values
import missingno as msno
msno.bar(dia)
plt.show()

X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.5,random_state=0)

a=StandardScaler()
X_train=a.fit_transform(X_train)
X_test=a.transform(X_test)

classfier=DecisionTreeClassifier(criterion="entropy",random_state=0)
classfier.fit(X_train,Y_train)

Y_pred=classfier.predict(X_test)

Y_pred

cm=confusion_matrix(Y_test,Y_pred)

cm

accuracy_score(Y_test,Y_pred)